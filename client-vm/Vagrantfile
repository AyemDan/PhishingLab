# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "generic/ubuntu2204"
  config.vm.box_version = "4.3.12"

  config.vm.define "client_vm" do |vm_config|
    # Set the internal hostname for the VM (used inside the guest)
    vm_config.vm.hostname = "client-vm"

    # Disable automatic box update checking. If you disable this, then
    # boxes will only be checked for updates when the user runs
    # `vagrant box outdated`. This is not recommended.
    # vm_config.vm.box_check_update = false

    # Create a forwarded port mapping which allows access to a specific port
    # within the machine from a port on the host machine. In the example below,
    # accessing "localhost:8080" will access port 80 on the guest machine.
    # NOTE: This will enable public access to the opened port
    # vm_config.vm.network "forwarded_port", guest: 80, host: 8080

    # Create a forwarded port mapping which allows access to a specific port
    # within the machine from a port on the host machine and only allow access
    # via 127.0.0.1 to disable public access
    # vm_config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

    # Create a private network, which allows host-only access to the machine
    # using a specific IP.
    # vm_config.vm.network "private_network", ip: "192.168.33.10"

    # Create a public network, which generally matched to bridged network.
    # Bridged networks make the machine appear as another physical device on
    # your network.
    # vm_config.vm.network "public_network"

    # Share an additional folder to the guest VM. The first argument is
    # the path on the host to the actual folder. The second argument is
    # the path on the guest to mount the folder. And the optional third
    # argument is a set of non-required options.
    # vm_config.vm.synced_folder "../data", "/vagrant_data"

    # Enable default synced folder from project directory to /vagrant
    # This is needed for provisioning unless you're using the file provisioner like below.
    vm_config.vm.synced_folder ".", "/vagrant", type: "rsync"

    # Provider-specific configuration so you can fine-tune various
    # backing providers for Vagrant. These expose provider-specific options.
    # Example for VirtualBox:
    vm_config.vm.provider "hyperv" do |hv|
      # Display the GUI when booting the machine (not supported in Hyper-V through Vagrant)
      # Set a name that appears in Hyper-V Manager
      hv.vmname = "client-vm"

      # Customize the amount of memory on the VM:
      hv.memory = "1024"
    end

    # Provision the playbook.yml by copying it directly into the VM
    vm_config.vm.provision "file", source: "playbook.yml", destination: "/home/vagrant/playbook.yml"

    # Enable provisioning with Ansible Local, using the copied playbook
    vm_config.vm.provision "ansible_local" do |ansible|
      ansible.playbook = "/home/vagrant/playbook.yml"
    end
  end
end
